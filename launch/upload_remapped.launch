<!-- load the human hand model into robot_description,
     start a joint_state_publisher, a robot_state_publisher, and a tactile_marker publisher -->
<launch>
	<arg name="gui" default="true" />
	<arg name="jsp" default="true"/>
	<arg name="in_js" default="/joint_states"/>

	<!-- use synergy with kinematics-based <mimic> tag -->
	<arg name="use_synergy" default="true"/>
	<arg name="tactile_mapping"/>
	<arg name="tactile_channel" default="tactile glove"/>
	<arg name="prefix" default=""/>
	<arg name="scale" default="1.0"/>
	<arg name="side" default=""/>

	<!-- load robot description -->
	<arg name="__noetic" value="$(eval env('ROS_PYTHON_VERSION') == '3')" />
	<param name="robot_description" if="$(arg __noetic)" command="xacro $(find human_hand_description)/robots/human_hand.urdf.xacro use_synergy:=$(arg use_synergy) tactile_mapping:=$(arg tactile_mapping) tactile_channel:='$(arg tactile_channel)' prefix:=$(arg prefix) scale:=$(arg scale) side:=$(arg side)" />
	<param name="robot_description" unless="$(arg __noetic)" command="xacro --xacro-ns $(find human_hand_description)/robots/human_hand.urdf.xacro use_synergy:=$(arg use_synergy) tactile_mapping:=$(arg tactile_mapping) tactile_channel:='$(arg tactile_channel)' prefix:=$(arg prefix) scale:=$(arg scale) side:=$(arg side)" />

	<group if="$(arg jsp)">
		<node name="$(anon glove_jsp)" pkg="joint_state_publisher" type="joint_state_publisher" >
			<!-- listen to synergy/joint_states topic for external synergy joint provider -->
			<rosparam if="$(arg use_synergy)" param="source_list">["synergy/joint_states"]</rosparam>
		</node>
		<node name="$(anon glove_jsp_gui)" pkg="joint_state_publisher_gui" type="joint_state_publisher_gui" if="$(arg gui)">
			<!-- listen to synergy/joint_states topic for external synergy joint provider -->
			<rosparam if="$(arg use_synergy)" param="source_list">["synergy/joint_states"]</rosparam>
		</node>
	</group>

	<node name="$(anon glove_rsp)" pkg="robot_state_publisher" type="robot_state_publisher">
		<remap from="joint_states" to="$(arg in_js)"/>
	</node>
</launch>
